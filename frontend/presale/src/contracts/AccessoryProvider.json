{
  "contractName": "AccessoryProvider",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providerSchemaName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supportsProviderInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_optionId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerSchemaName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportsProviderInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_optionId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"Returns a URL specifying some metadata about the option. This metadata can be of the same structure as the ERC1155 metadata.\"}},\"title\":\"AccessoryProvider AccessoryProvider - a provider contract for Building Accessory semi-fungible tokens.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"name()\":{\"notice\":\"Returns the name of this provider.\"},\"numOptions()\":{\"notice\":\"Number of options the provider supports.\"},\"providerSchemaName()\":{\"notice\":\"Indicates the Wyvern schema name for assets in this lootbox, e.g. \\\"ERC1155\\\"\"},\"supportsProviderInterface()\":{\"notice\":\"Indicates that this is a provider contract. Ideally would use EIP 165 supportsInterface()\"},\"symbol()\":{\"notice\":\"Returns the symbol for this provider.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/presale/AccessoryProvider.sol\":\"AccessoryProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"openzeppelin-solidity/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"openzeppelin-solidity/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xbda715785876dbfc675396b89ac45bb9f4cceb968133a8258924d163a700f0e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2345f1fbddd1fc344a50bdac7bcebf6e266398fed655c0df6b7940385a59a43\",\"dweb:/ipfs/Qmf6GX6ddVTySuct3AY4uDzj327i1cLZuPzWBfFX6oKZMS\"]},\"openzeppelin-solidity/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0709c3f462b28b400f57db181254ad970967c3b49a8948ef5e05929b106ffe\",\"dweb:/ipfs/QmNe3sRmPKw1T7q7m733tk7tFKpi3jo9PCisDPMbjeg3kJ\"]},\"openzeppelin-solidity/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7de6e64d4a8075e803a972cc77c4c91463e0c3777e4110eacfb5d4a71759b2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b3b09ef36374c1c104ee896797dadf2e81466d2143b481d3f1ddc7d9f3873\",\"dweb:/ipfs/QmSWtqs28RHDezRWBbmEfqiPYwsGTKj44NRbuxvZ96cqMU\"]},\"openzeppelin-solidity/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/ERC1155Tradable.sol\":{\"keccak256\":\"0x18eb43226b7d2d309cedf471215479d849ec9a4a9c5dbeefea68d64fdf3d1579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a482d2d40943f52ab6db01c41f0aba4b9f4adb9329f79bd808cbed7605462c2\",\"dweb:/ipfs/QmYmY9b6MPJDogZj2R49Cc1ng2h2UGsjKttgH9KdBKF9Gg\"]},\"project:/contracts/common/meta-transactions/ContentMixin.sol\":{\"keccak256\":\"0x30d6c8abb063399e9910e6429b2951fa7912655a16e9e7dc72e32478bcad69e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71fcb973adf4eee01016a9df28d24517647743b3c73c19888af60c75f61797b6\",\"dweb:/ipfs/QmNMB26qzQ1oxMyMnPxYVcgSVXN3oHQUf1JoF9yFr5NEM8\"]},\"project:/contracts/common/meta-transactions/EIP712Base.sol\":{\"keccak256\":\"0x246e85956ec0e724c1ff413423827ad03c82121a170c15e7aa8c143be7642cc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8a9df52dda294b3efd398d62a20fd86b6bdcb5192e03a1ef48721030afa8fd\",\"dweb:/ipfs/QmR3ijHQE7kgizAnc1xfwQ8dAe7HrcnQzFYwvZ2auP3ZXp\"]},\"project:/contracts/common/meta-transactions/Initializable.sol\":{\"keccak256\":\"0x79d5d770b846ab423cbc24fba40b45f58a91fd83e6a4740d6dc7595d6b2641ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dd65b215c28582980c440a649a035a10a724b8492416d826796e88555c7137a\",\"dweb:/ipfs/QmYBFWt6wQwwfRe3gd5J8DHEuW6jvB668Dm4vxo76K8WA9\"]},\"project:/contracts/common/meta-transactions/NativeMetaTransaction.sol\":{\"keccak256\":\"0x1434b823e17539024fbee1fbe5a9907451b9d288704c988b08ad741482b2a341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f589c125529e08ac8e7f12bdab76b5a749364188f7f5169704e81e7d3385a451\",\"dweb:/ipfs/QmNVEMxXfkW24dWbprFRhUgWTx8ednRihx1ixsKR9MQgPc\"]},\"project:/contracts/common/meta-transactions/ProxyRegistry.sol\":{\"keccak256\":\"0xc0930cb46d3fe9a90c59776c6bd4ef77ba2f046ca0e68f17198842e1e6b5dd52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed8040970cad89e9b787598823d1cc04d01b029faf346fcff9e22d8ae5269519\",\"dweb:/ipfs/QmVf6XmhW11g1eGELxe9FULHD9ffuXPz6mubppXxrFgqmw\"]},\"project:/contracts/presale/AccessoryProvider.sol\":{\"keccak256\":\"0x350052352bb9ead1749c4347d32df3e3bd5fb3f41a7583c405ff64c228e60b98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a27741671fdd000504abb2a5ebbc4fb9fb9cae91d26873c1bf858565f06d30\",\"dweb:/ipfs/QmPF3qhwSSAB3ZDVEzeoEEUJLs4Yz6qgMDg56Dm8ubw7Hg\"]},\"project:/contracts/presale/IProvider.sol\":{\"keccak256\":\"0x4630f99d048e85977a960040a96e6b82f245d6efc3a6435b5d5b75c3ea0fea04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f456867a6a74decc316f7f3d1b9d3b3844cda553c14da13ab707c89b64e035a7\",\"dweb:/ipfs/QmS3LVjE73UtkECe51a4ytKi1P2KfCEaYjFiAo9uuUr8jz\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\r\nimport \"openzeppelin-solidity/contracts/security/ReentrancyGuard.sol\";\r\nimport \"openzeppelin-solidity/contracts/utils/Strings.sol\";\r\nimport \"./IProvider.sol\";\r\nimport \"../ERC1155Tradable.sol\";\r\n\r\n/**\r\n * @title AccessoryProvider\r\n * AccessoryProvider - a provider contract for Building Accessory semi-fungible\r\n * tokens.\r\n */\r\nabstract contract AccessoryProvider is IProvider, Ownable, ReentrancyGuard {\r\n    using Strings for string;\r\n    using SafeMath for uint256;\r\n}\r\n",
  "sourcePath": "D:\\04_Work\\001\\NFT_presale\\smart_contract\\contracts\\presale\\AccessoryProvider.sol",
  "ast": {
    "absolutePath": "project:/contracts/presale/AccessoryProvider.sol",
    "exportedSymbols": {
      "AccessoryProvider": [
        6971
      ],
      "Address": [
        3045
      ],
      "Context": [
        3067
      ],
      "ContextMixin": [
        6606
      ],
      "EIP712Base": [
        6722
      ],
      "ERC1155": [
        1224
      ],
      "ERC1155Tradable": [
        5513
      ],
      "ERC165": [
        3294
      ],
      "IERC1155": [
        1346
      ],
      "IERC1155MetadataURI": [
        1402
      ],
      "IERC1155Receiver": [
        1387
      ],
      "IERC165": [
        3306
      ],
      "IProvider": [
        8169
      ],
      "NativeMetaTransaction": [
        6941
      ],
      "Ownable": [
        103
      ],
      "OwnableDelegateProxy": [
        6944
      ],
      "ProxyRegistry": [
        6950
      ],
      "ReentrancyGuard": [
        143
      ],
      "SafeMath": [
        3618
      ],
      "Strings": [
        3270
      ]
    },
    "id": 6972,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6952,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:35"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 6953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 104,
        "src": "62:60:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "id": 6954,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 144,
        "src": "124:70:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 6955,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 3271,
        "src": "196:59:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/presale/IProvider.sol",
        "file": "./IProvider.sol",
        "id": 6956,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 8170,
        "src": "257:25:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC1155Tradable.sol",
        "file": "../ERC1155Tradable.sol",
        "id": 6957,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 5514,
        "src": "284:32:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6959,
              "name": "IProvider",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8169,
              "src": "491:9:35"
            },
            "id": 6960,
            "nodeType": "InheritanceSpecifier",
            "src": "491:9:35"
          },
          {
            "baseName": {
              "id": 6961,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "502:7:35"
            },
            "id": 6962,
            "nodeType": "InheritanceSpecifier",
            "src": "502:7:35"
          },
          {
            "baseName": {
              "id": 6963,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 143,
              "src": "511:15:35"
            },
            "id": 6964,
            "nodeType": "InheritanceSpecifier",
            "src": "511:15:35"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6958,
          "nodeType": "StructuredDocumentation",
          "src": "320:130:35",
          "text": " @title AccessoryProvider\n AccessoryProvider - a provider contract for Building Accessory semi-fungible\n tokens."
        },
        "fullyImplemented": false,
        "id": 6971,
        "linearizedBaseContracts": [
          6971,
          143,
          103,
          3067,
          8169
        ],
        "name": "AccessoryProvider",
        "nameLocation": "470:17:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6967,
            "libraryName": {
              "id": 6965,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3270,
              "src": "540:7:35"
            },
            "nodeType": "UsingForDirective",
            "src": "534:25:35",
            "typeName": {
              "id": 6966,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "552:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 6970,
            "libraryName": {
              "id": 6968,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3618,
              "src": "571:8:35"
            },
            "nodeType": "UsingForDirective",
            "src": "565:27:35",
            "typeName": {
              "id": 6969,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          }
        ],
        "scope": 6972,
        "src": "452:143:35",
        "usedErrors": []
      }
    ],
    "src": "35:562:35"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/presale/AccessoryProvider.sol",
    "exportedSymbols": {
      "AccessoryProvider": [
        6971
      ],
      "Address": [
        3045
      ],
      "Context": [
        3067
      ],
      "ContextMixin": [
        6606
      ],
      "EIP712Base": [
        6722
      ],
      "ERC1155": [
        1224
      ],
      "ERC1155Tradable": [
        5513
      ],
      "ERC165": [
        3294
      ],
      "IERC1155": [
        1346
      ],
      "IERC1155MetadataURI": [
        1402
      ],
      "IERC1155Receiver": [
        1387
      ],
      "IERC165": [
        3306
      ],
      "IProvider": [
        8169
      ],
      "NativeMetaTransaction": [
        6941
      ],
      "Ownable": [
        103
      ],
      "OwnableDelegateProxy": [
        6944
      ],
      "ProxyRegistry": [
        6950
      ],
      "ReentrancyGuard": [
        143
      ],
      "SafeMath": [
        3618
      ],
      "Strings": [
        3270
      ]
    },
    "id": 6972,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6952,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:35"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 6953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 104,
        "src": "62:60:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin-solidity/contracts/security/ReentrancyGuard.sol",
        "id": 6954,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 144,
        "src": "124:70:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "id": 6955,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 3271,
        "src": "196:59:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/presale/IProvider.sol",
        "file": "./IProvider.sol",
        "id": 6956,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 8170,
        "src": "257:25:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC1155Tradable.sol",
        "file": "../ERC1155Tradable.sol",
        "id": 6957,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6972,
        "sourceUnit": 5514,
        "src": "284:32:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6959,
              "name": "IProvider",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8169,
              "src": "491:9:35"
            },
            "id": 6960,
            "nodeType": "InheritanceSpecifier",
            "src": "491:9:35"
          },
          {
            "baseName": {
              "id": 6961,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "502:7:35"
            },
            "id": 6962,
            "nodeType": "InheritanceSpecifier",
            "src": "502:7:35"
          },
          {
            "baseName": {
              "id": 6963,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 143,
              "src": "511:15:35"
            },
            "id": 6964,
            "nodeType": "InheritanceSpecifier",
            "src": "511:15:35"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6958,
          "nodeType": "StructuredDocumentation",
          "src": "320:130:35",
          "text": " @title AccessoryProvider\n AccessoryProvider - a provider contract for Building Accessory semi-fungible\n tokens."
        },
        "fullyImplemented": false,
        "id": 6971,
        "linearizedBaseContracts": [
          6971,
          143,
          103,
          3067,
          8169
        ],
        "name": "AccessoryProvider",
        "nameLocation": "470:17:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6967,
            "libraryName": {
              "id": 6965,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3270,
              "src": "540:7:35"
            },
            "nodeType": "UsingForDirective",
            "src": "534:25:35",
            "typeName": {
              "id": 6966,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "552:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 6970,
            "libraryName": {
              "id": 6968,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3618,
              "src": "571:8:35"
            },
            "nodeType": "UsingForDirective",
            "src": "565:27:35",
            "typeName": {
              "id": 6969,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "584:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          }
        ],
        "scope": 6972,
        "src": "452:143:35",
        "usedErrors": []
      }
    ],
    "src": "35:562:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-19T18:58:35.299Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "uri(uint256)": {
        "details": "Returns a URL specifying some metadata about the option. This metadata can be of the same structure as the ERC1155 metadata."
      }
    },
    "title": "AccessoryProvider AccessoryProvider - a provider contract for Building Accessory semi-fungible tokens.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "name()": {
        "notice": "Returns the name of this provider."
      },
      "numOptions()": {
        "notice": "Number of options the provider supports."
      },
      "providerSchemaName()": {
        "notice": "Indicates the Wyvern schema name for assets in this lootbox, e.g. \"ERC1155\""
      },
      "supportsProviderInterface()": {
        "notice": "Indicates that this is a provider contract. Ideally would use EIP 165 supportsInterface()"
      },
      "symbol()": {
        "notice": "Returns the symbol for this provider."
      }
    },
    "version": 1
  }
}